---
import Logo from "../logo.astro";
import ModelSm from "../../../public/Tesla/Model-S-m.avif";
import Model3m from "./../../../public/Tesla/Model-3-m.avif";
import ModelXm from "./../../../public/Tesla/Model-X-m.avif";
import ModelYm from "./../../../public/Tesla/Model-Y-m.avif";
import CyberTruck from "./../../../public/Tesla/Cybertruck.avif";
import Modelsym from "./../../../public/Tesla/Model-SY-m.avif";
import EnergyMegapackm from "./../../../public/Tesla/EnergyMegapackm.avif";
import EnergyPowerwallm from "./../../../public/Tesla/EnergyPowerwallm.avif";
import ChargingGlobalm from "./../../../public/Tesla/ChargingGlobalm.avif";
import HomeChargingm from "./../../../public/Tesla/HomeChargingm.avif";
import ChargingSuperchargingm from "./../../../public/Tesla/ChargingSuperchargingm.avif";

const vehiculos = [
  {
    image: ModelSm,
    name: "Model S",
    link: "#",
  },
  {
    image: Model3m,
    name: "Model 3",
    link: "#",
  },
  {
    image: ModelXm,
    name: "Model X",
    link: "#",
  },
  {
    image: ModelYm,
    name: "Model Y",
    link: "#",
  },
  {
    image: CyberTruck,
    name: "CyberTruck",
    link: "#",
  },
  {
    image: Modelsym,
    name: "Modelsym",
    link: "#",
  },
];
const Energía = [
  {
    image: EnergyMegapackm,
    name: "Megapack",
    link: "#",
  },
  {
    image: EnergyPowerwallm,
    name: "Powerwall",
    link: "#",
  },
];
const Carga = [
  {
    image: ChargingGlobalm,
    name: "Carga",
    link: "#",
  },
  {
    image: HomeChargingm,
    name: "Carga en casa",
    link: "#",
  },
  {
    image: ChargingSuperchargingm,
    name: "Supercarga",
    link: "#",
  },
];
---

<header
  id="landing-header"
  class="py-3 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-black"
>
  <div class="flex flex-grow basis-0 pl-3">
    <Logo />
  </div>
  <nav>
    <ul
      class="flex text-sm text-black [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li class="group">
        <a href="#" data-target="vehiculos">Vehículos</a>
      </li>
      <li class="group">
        <a href="#" data-target="energia">Energía</a>
      </li>
      <li class="group">
        <a href="#" data-target="carga">Carga</a>
      </li>
      <li class="group">
        <a href="#" data-target="descubrir">Descubrir</a>
      </li>
    </ul>
  </nav>
  <nav class="flex flex-grow justify-end basis-0">
    <ul class="flex text-sm text-black space-x-4 pr-6">
      <li>
        <a href="#">
          <svg
            fill="currentColor"
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 duration-500"
            viewBox="0 0 24 24"
            ><path
              d="M12 4C9.243 4 7 6.243 7 9h2c0-1.654 1.346-3 3-3s3 1.346 3 3c0 1.069-.454 1.465-1.481 2.255-.382.294-.813.626-1.226 1.038C10.981 13.604 10.995 14.897 11 15v2h2v-2.009c0-.024.023-.601.707-1.284.32-.32.682-.598 1.031-.867C15.798 12.024 17 11.1 17 9c0-2.757-2.243-5-5-5zm-1 14h2v2h-2z"
            ></path></svg
          >
        </a>
      </li>
      <li>
        <a href="#">
          <svg
            fill="currentColor"
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 duration-500"
            viewBox="0 0 24 24"
            ><path
              d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm7.931 9h-2.764a14.67 14.67 0 0 0-1.792-6.243A8.013 8.013 0 0 1 19.931 11zM12.53 4.027c1.035 1.364 2.427 3.78 2.627 6.973H9.03c.139-2.596.994-5.028 2.451-6.974.172-.01.344-.026.519-.026.179 0 .354.016.53.027zm-3.842.7C7.704 6.618 7.136 8.762 7.03 11H4.069a8.013 8.013 0 0 1 4.619-6.273zM4.069 13h2.974c.136 2.379.665 4.478 1.556 6.23A8.01 8.01 0 0 1 4.069 13zm7.381 6.973C10.049 18.275 9.222 15.896 9.041 13h6.113c-.208 2.773-1.117 5.196-2.603 6.972-.182.012-.364.028-.551.028-.186 0-.367-.016-.55-.027zm4.011-.772c.955-1.794 1.538-3.901 1.691-6.201h2.778a8.005 8.005 0 0 1-4.469 6.201z"
            ></path></svg
          >
        </a>
      </li>
      <li>
        <a href="#">
          <svg
            fill="currentColor"
            xmlns="http://www.w3.org/2000/svg"
            class="h-6 duration-500"
            viewBox="0 0 24 24"
            ><path
              d="M12 2A10.13 10.13 0 0 0 2 12a10 10 0 0 0 4 7.92V20h.1a9.7 9.7 0 0 0 11.8 0h.1v-.08A10 10 0 0 0 22 12 10.13 10.13 0 0 0 12 2zM8.07 18.93A3 3 0 0 1 11 16.57h2a3 3 0 0 1 2.93 2.36 7.75 7.75 0 0 1-7.86 0zm9.54-1.29A5 5 0 0 0 13 14.57h-2a5 5 0 0 0-4.61 3.07A8 8 0 0 1 4 12a8.1 8.1 0 0 1 8-8 8.1 8.1 0 0 1 8 8 8 8 0 0 1-2.39 5.64z"
            ></path><path
              d="M12 6a3.91 3.91 0 0 0-4 4 3.91 3.91 0 0 0 4 4 3.91 3.91 0 0 0 4-4 3.91 3.91 0 0 0-4-4zm0 6a1.91 1.91 0 0 1-2-2 1.91 1.91 0 0 1 2-2 1.91 1.91 0 0 1 2 2 1.91 1.91 0 0 1-2 2z"
            ></path></svg
          >
        </a>
      </li>
    </ul>
  </nav>
</header>

<div
  id="megamenu-modal"
  class="fixed top-[-100%] left-0 w-screen bg-white text-black flex items-center justify-center z-30 opacity-0 transition-all duration-1000 ease-in-out"
>
  <div class="w-full mt-24 flex justify-center p-4">
    <div id="vehiculos" class="modal-section grid w-full max-w-screen-xl">
      <div class="flex w-full p-5">
        <div
          class="grid grid-cols-2 md:grid-cols-4 w-full md:w-4/5 justify-center md:mr-20"
        >
          {
            vehiculos.map((model) => {
              return (
                <div class="space-y-2 mx-2 text-center">
                  <a
                    href={model.link}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <img
                      src={model.image.src}
                      alt="model"
                      class="max-h-32 max-w-full mx-auto object-contain"
                    />
                  </a>
                  <h3 class="text-lg font-semibold">{model.name}</h3>
                  <div class="space-x-2 underline">
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Más Info
                    </a>
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Ordenar
                    </a>
                  </div>
                </div>
              );
            })
          }
        </div>
        <div class="hidden md:block w-[1px] bg-gray-300 mr-20"></div>
        <div class="flex flex-col w-full md:w-1/5 space-y-4 md:mt-0">
          <p class="text-sm font-semibold">Inventory</p>
          <p class="text-sm font-semibold">Used Cars</p>
          <p class="text-sm font-semibold">Demo Drive</p>
          <p class="text-sm font-semibold">Trade-in</p>
          <p class="text-sm font-semibold">Compare</p>
          <p class="text-sm font-semibold">Help Me Charge</p>
          <p class="text-sm font-semibold">Fleet</p>
          <p class="text-sm font-semibold">Semi</p>
          <p class="text-sm font-semibold">Roadster</p>
        </div>
      </div>
    </div>
    <div id="energia" class="modal-section grid text-center">
      <div class="flex w-full p-5">
        <div class="grid grid-cols-2 w-full md:w-4/5 justify-center md:mr-20">
          {
            Energía.map((model) => {
              return (
                <div class="space-y-2 mx-2 text-center">
                  <img
                    src={model.image.src}
                    alt="model"
                    class="max-h-32 max-w-full mx-auto object-contain"
                  />
                  <h3 class="text-lg font-semibold">{model.name}</h3>
                  <div class="space-x-2 underline">
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Más Info
                    </a>
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Ordenar
                    </a>
                  </div>
                </div>
              );
            })
          }
        </div>
        <div class="hidden md:block w-[1px] bg-gray-300 mr-20"></div>
        <div class="flex flex-col w-full md:w-1/5 space-y-4 md:mt-0">
          <p class="text-sm font-semibold">Infraestructura</p>
          <p class="text-sm font-semibold">Comercial</p>
        </div>
      </div>
    </div>
    <div id="carga" class="modal-section grid text-center">
      <div class="flex w-full p-5">
        <div class="grid grid-cols-3 w-full md:w-4/5 justify-center md:mr-20">
          {
            Carga.map((model) => {
              return (
                <div class="space-y-2 mx-2 text-center">
                  <img
                    src={model.image.src}
                    alt="model"
                    class="max-h-32 max-w-full mx-auto object-contain"
                  />
                  <h3 class="text-lg font-semibold">{model.name}</h3>
                  <div class="space-x-2 underline">
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Más Info
                    </a>
                    <a
                      href="#"
                      class="text-slate-600 text-[14px] hover:text-black"
                    >
                      Ordenar
                    </a>
                  </div>
                </div>
              );
            })
          }
        </div>
        <div class="hidden md:block w-[1px] bg-gray-300 mr-20"></div>
        <div class="flex flex-col w-full md:w-1/5 space-y-4 md:mt-0">
          <p class="text-sm font-semibold">Albergar un Supercharger</p>
          <p class="text-sm font-semibold">Alojar Wall Connectors</p>
        </div>
      </div>
    </div>
    <div id="descubrir" class="modal-section grid text-center">
      <div class="flex w-full p-5 text-left font-medium">
        <div class="mx-12 space-y-4 mb-16">
          <h5 class="mb-8 text-gray-400 font-medium">Recursos</h5>
          <p class="text-sm font-medium">Prueba de manejo</p>
          <p class="text-sm font-medium">eventos</p>
          <p class="text-sm font-medium">Guias de video</p>
        </div>
        <div class="mx-12 space-y-4">
          <h5 class="mb-8 text-gray-400 font-medium">Servicios de ubicacion</h5>
          <p class="text-sm font-medium">Ubicanos</p>
        </div>
        <div class="space-y-4">
          <h5 class="mb-8 text-gray-400 font-medium">Compañia</h5>
          <p class="text-sm font-medium">Acerca de</p>
          <p class="text-sm font-medium">Bolsa de Trabajo</p>
          <p class="text-sm font-medium">Relaciones con inversionistas</p>
        </div>
      </div>
    </div>
  </div>

  <style>
    #landing-header {
      transition: transform 0.3s ease-in-out;
    }

    .header-hidden {
      transform: translateY(-100%);
    }
  </style>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const headerEl = document.querySelector("#landing-header") as HTMLElement;
      const mainEl = document.querySelector("main");
      const modal = document.getElementById("megamenu-modal");

      const sections = document.querySelectorAll(".modal-section");
      const navLinks = document.querySelectorAll("nav ul li a");
      const menuBackDrop = document.querySelector(
        "#menu-backdrop"
      ) as HTMLElement;
      const listItem = document.querySelectorAll("#landing-header li");

      const contentSections = document.querySelectorAll("main > div");

      let lastScrollTop = 0;

      // Mostrar el modal y cambiar la sección visible
      navLinks.forEach((link) => {
        link.addEventListener("mouseenter", function () {
          const targetId = this.getAttribute("data-target");

          sections.forEach((section) => {
            section.classList.toggle("hidden", section.id !== targetId);
          });

          // Mostrar el modal con Tailwind
          modal?.classList.remove("top-[-100%]", "opacity-0");
          modal?.classList.add("top-0", "opacity-100");

          // Cambiar el color del texto del header
          headerEl.style.color = "#000";

          // Aplicar blur a las secciones fuera del modal
          contentSections.forEach((section) => {
            section.classList.add("blurred");
          });
        });
      });

      // Ocultar el modal y remover el blur al salir del mismo
      modal?.addEventListener("mouseleave", () => {
        // Ocultar el modal con Tailwind
        modal?.classList.remove("top-0", "opacity-100");
        modal?.classList.add("top-[-100%]", "opacity-0");

        // Restaurar el color original del header
        headerEl.style.color = "";

        // Remover blur de las secciones fuera del modal
        contentSections.forEach((section) => {
          section.classList.remove("blurred");
        });
      });

      // Controlar la visibilidad del header al hacer scroll
      mainEl?.addEventListener("scroll", () => {
        const currentScrollTop = mainEl?.scrollTop;

        headerEl.classList.toggle(
          "header-hidden",
          currentScrollTop > lastScrollTop
        );
        lastScrollTop = Math.max(currentScrollTop, 0);
      });

      // Actualizar el backdrop del menú al hacer hover en los items
      // listItem.forEach((item) => {
      //   item.addEventListener("mouseenter", () => {
      //     const { left, top, width, height } = item.getBoundingClientRect();

      //     menuBackDrop.style.setProperty("--left", `${left}px`);
      //     menuBackDrop.style.setProperty("--top", `${top}px`);
      //     menuBackDrop.style.setProperty("--width", `${width}px`);
      //     menuBackDrop.style.setProperty("--height", `${height}px`);
      //     menuBackDrop.style.opacity = "1";
      //     menuBackDrop.style.visibility = "visible";
      //   });

      //   item.addEventListener("mouseleave", () => {
      //     menuBackDrop.style.opacity = "0";
      //     menuBackDrop.style.visibility = "hidden";
      //   });
      // });
    });
  </script>

  <!--<script>
  const listItem = document.querySelectorAll("#landing-header li");
  const menuBackDrop = document.querySelector("#menu-backdrop") as HTMLElement;

  listItem.forEach((item) => {
    item.addEventListener("mouseenter", () => {
      const { left, top, width, height } = item.getBoundingClientRect();

      menuBackDrop.style.setProperty("--left", `${left}px`);
      menuBackDrop.style.setProperty("--top", `${top}px`);
      menuBackDrop.style.setProperty("--width", `${width}px`);
      menuBackDrop.style.setProperty("--height", `${height}px`);

      menuBackDrop.style.opacity = "1";
      menuBackDrop.style.visibility = "visible";
    });

    item.addEventListener("mouseleave", () => {
      menuBackDrop.style.opacity = "0";
      menuBackDrop.style.visibility = "hidden";
    });
  });
</script>-->

  <script>
    const headerEl = document.querySelector("#landing-header") as HTMLElement;

    const observerOptions = {
      root: null,
      rootMargin: "20px",
      threshold: 0.9,
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const { isIntersecting } = entry;
        if (isIntersecting) {
          const color = entry.target.getAttribute("data-header-color");
          if (color !== null) {
            // Solo asigna si no es null
            headerEl.style.color = color;
          }
        }
      });
    }, observerOptions);

    const sectionElements = document.querySelectorAll(".landing-section");
    sectionElements.forEach((section) => observer.observe(section));
  </script>
</div>
